# Generated by Django 5.1.4 on 2025-01-07 03:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=25, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Especialidad',
                'verbose_name_plural': 'Especialidades',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=15, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Género',
                'verbose_name_plural': 'Géneros',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('f_nacim', models.DateField(blank=True, null=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('tel_pers', models.CharField(blank=True, max_length=15, null=True)),
                ('name_emerg', models.CharField(blank=True, max_length=100, null=True)),
                ('tel_emerg', models.CharField(blank=True, max_length=15, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('genero', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='A10_Usu.genero')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SistemaSalud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Sistema de Salud',
                'verbose_name_plural': 'Sistemas de Salud',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JefePlataforma',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='jefeplataforma_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('f_contratacion', models.DateField(blank=True, null=True)),
                ('perfil_completo', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Jefe de Plataforma',
                'verbose_name_plural': 'Jefes de Plataforma',
                'permissions': (('Home_JefePlataforma', 'Home Jefe de Plataforma'),),
            },
        ),
        migrations.CreateModel(
            name='Recepcionista',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='recepcionista_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('f_contratacion', models.DateField(blank=True, null=True)),
                ('perfil_completo', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Recepcionista',
                'verbose_name_plural': 'Recepcionistas',
                'permissions': (('Home_Recepcionista', 'Home Recepcionista'),),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('A10_Usu.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='medico_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('curriculum', models.TextField(blank=True, null=True)),
                ('f_contratacion', models.DateField(blank=True, null=True)),
                ('perfil_completo', models.BooleanField(default=False)),
                ('especialidad', models.ManyToManyField(blank=True, to='A10_Usu.especialidad')),
                ('sists_salud', models.ManyToManyField(blank=True, to='A10_Usu.sistemasalud')),
            ],
            options={
                'verbose_name': 'Medico',
                'verbose_name_plural': 'Medicos',
                'permissions': (('Home_Medico', 'Home Medico'),),
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='paciente_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('grupoSangre', models.CharField(blank=True, choices=[('1', '0-'), ('2', '0+'), ('3', 'A-'), ('4', 'A+'), ('5', 'B-'), ('6', 'B+'), ('7', 'AB-'), ('8', 'AB+'), ('9', 'Otro')], max_length=4, null=True)),
                ('enfermedades', models.TextField(blank=True, null=True)),
                ('cirugias', models.TextField(blank=True, null=True)),
                ('alergias', models.TextField(blank=True, null=True)),
                ('meds_actuales', models.TextField(blank=True, null=True)),
                ('perfil_completo', models.BooleanField(default=False)),
                ('sistema_salud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='A10_Usu.sistemasalud')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'permissions': (('Home_Paciente', 'Home Paciente'),),
            },
        ),
    ]
